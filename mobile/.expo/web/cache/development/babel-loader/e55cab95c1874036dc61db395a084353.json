{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/media/saeed1234/New Volume1/Projects/iot/task2/Self-driving-car/mobile/App.js\";\nimport { HStack, Center, NativeBaseProvider, VStack, IconButton, Button, Card, Text, Image } from 'native-base';\nimport React, { useState, useEffect } from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Video } from 'expo-av';\nexport default function App() {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      RFID = _useState2[0],\n      setRFID = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      socketMessage = _useState4[0],\n      setSocketMessage = _useState4[1];\n\n  var ws = new WebSocket('ws://192.168.1.9:80/slave');\n  useEffect(function () {\n    ws.onopen = function () {\n      console.log('Connected to server');\n      ws.send('something');\n    };\n\n    ws.onclose = function (e) {\n      console.log(e.code, e.reason);\n    };\n\n    ws.onclose = function (e) {\n      console.log(e.code, e.reason);\n    };\n\n    ws.onerror = function (e) {\n      console.log(e.message);\n    };\n  }, []);\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(HStack, {\n    safeArea: true,\n    width: Dimensions.get('window').width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(VStack, {\n    width: \"70%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(HStack, {\n    marginY: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    colorScheme: \"darkBlue\",\n    mx: 4,\n    rightIcon: React.createElement(Ionicons, {\n      color: \"white\",\n      size: 20,\n      name: \"speedometer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }),\n    onPress: function onPress() {\n      return ws.send('pilot');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Pilot\")), React.createElement(Button, {\n    mx: 4,\n    rightIcon: React.createElement(Ionicons, {\n      color: \"white\",\n      size: 20,\n      name: \"airplane\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 28\n      }\n    }),\n    onPress: function onPress() {\n      return ws.send('auto-pilot');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Auto-Pilot\")), React.createElement(Button, {\n    marginY: 5,\n    colorScheme: \"yellow\",\n    rightIcon: React.createElement(Ionicons, {\n      color: \"black\",\n      size: 20,\n      name: \"bluetooth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Find RFID\")), React.createElement(Card, {\n    mt: 20,\n    width: 250,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"RFID ID is: \" + RFID)))), React.createElement(\"div\", {\n    width: \"30%\",\n    safeArea: true,\n    borderLeftWidth: 2,\n    borderColor: \"muted.300\",\n    pt: \"32\",\n    pb: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(IconButton, {\n    onPressIn: function onPressIn() {\n      return ws.send('F');\n    },\n    onPressOut: function onPressOut() {\n      return ws.send('S');\n    },\n    icon: React.createElement(Ionicons, {\n      color: \"green\",\n      size: 60,\n      name: \"chevron-up-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), React.createElement(HStack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, React.createElement(IconButton, {\n    onPressIn: function onPressIn() {\n      return ws.send('L');\n    },\n    onPressOut: function onPressOut() {\n      return ws.send('S');\n    },\n    mx: 4,\n    icon: React.createElement(Ionicons, {\n      color: \"green\",\n      size: 60,\n      name: \"chevron-back-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), React.createElement(IconButton, {\n    onPressIn: function onPressIn() {\n      return ws.send('R');\n    },\n    onPressOut: function onPressOut() {\n      return ws.send('S');\n    },\n    mx: 4,\n    icon: React.createElement(Ionicons, {\n      color: \"green\",\n      size: 60,\n      name: \"chevron-forward-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), React.createElement(IconButton, {\n    onPressIn: function onPressIn() {\n      return ws.send('B');\n    },\n    onPressOut: function onPressOut() {\n      return ws.send('S');\n    },\n    icon: React.createElement(Ionicons, {\n      color: \"green\",\n      size: 60,\n      name: \"chevron-down-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/media/saeed1234/New Volume1/Projects/iot/task2/Self-driving-car/mobile/App.js"],"names":["HStack","Center","NativeBaseProvider","VStack","IconButton","Button","Card","Text","Image","React","useState","useEffect","Ionicons","Video","App","RFID","setRFID","socketMessage","setSocketMessage","ws","WebSocket","onopen","console","log","send","onclose","e","code","reason","onerror","message","Dimensions","get","width"],"mappings":"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","sourcesContent":["import {\n  HStack,\n  Center,\n  NativeBaseProvider,\n  VStack,\n  IconButton,\n  Button,\n  Card,\n  Text,\n  Image,\n} from 'native-base';\nimport React, { useState, useEffect } from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Dimensions } from 'react-native';\nimport { Video } from 'expo-av';\n\nexport default function App() {\n  const [RFID, setRFID] = useState(1);\n  const [socketMessage, setSocketMessage] = useState('');\n\n  var ws = new WebSocket('ws://192.168.1.9:80/slave');\n  useEffect(() => {\n    ws.onopen = () => {\n      // connection opened\n      console.log('Connected to server');\n      ws.send('something'); // send a message\n    };\n    ws.onclose = (e) => {\n      // connection closed\n      console.log(e.code, e.reason);\n    };\n    ws.onclose = (e) => {\n      console.log(e.code, e.reason);\n    };\n    ws.onerror = (e) => {\n      // an error occurred\n      console.log(e.message);\n    };\n  }, []);\n\n  return (\n    <NativeBaseProvider>\n      <HStack safeArea width={Dimensions.get('window').width}>\n        <VStack width=\"70%\">\n          <Center>\n            <HStack marginY={5}>\n              <Button\n                colorScheme=\"darkBlue\"\n                mx={4}\n                rightIcon={\n                  <Ionicons color=\"white\" size={20} name=\"speedometer\" />\n                }\n                onPress={() => ws.send('pilot')}\n              >\n                <Text color=\"white\">Pilot</Text>\n              </Button>\n              <Button\n                mx={4}\n                rightIcon={<Ionicons color=\"white\" size={20} name=\"airplane\" />}\n                onPress={() => ws.send('auto-pilot')}\n              >\n                Auto-Pilot\n              </Button>\n            </HStack>\n            <Button\n              marginY={5}\n              colorScheme=\"yellow\"\n              rightIcon={<Ionicons color=\"black\" size={20} name=\"bluetooth\" />}\n            >\n              <Text>Find RFID</Text>\n            </Button>\n            <Card mt={20} width={250}>\n              <Text\n                fontWeight=\"bold\"\n                textAlign=\"center\"\n              >{`RFID ID is: ${RFID}`}</Text>\n            </Card>\n          </Center>\n        </VStack>\n        <div\n          width=\"30%\"\n          safeArea\n          borderLeftWidth={2}\n          borderColor=\"muted.300\"\n          pt=\"32\"\n          pb=\"32\"\n        >\n          <IconButton\n            onPressIn={() => ws.send('F')}\n            onPressOut={() => ws.send('S')}\n            icon={<Ionicons color=\"green\" size={60} name=\"chevron-up-circle\" />}\n          />\n          <HStack>\n            <IconButton\n              onPressIn={() => ws.send('L')}\n              onPressOut={() => ws.send('S')}\n              mx={4}\n              icon={\n                <Ionicons color=\"green\" size={60} name=\"chevron-back-circle\" />\n              }\n            />\n            <IconButton\n              onPressIn={() => ws.send('R')}\n              onPressOut={() => ws.send('S')}\n              mx={4}\n              icon={\n                <Ionicons\n                  color=\"green\"\n                  size={60}\n                  name=\"chevron-forward-circle\"\n                />\n              }\n            />\n          </HStack>\n          <IconButton\n            onPressIn={() => ws.send('B')}\n            onPressOut={() => ws.send('S')}\n            icon={\n              <Ionicons color=\"green\" size={60} name=\"chevron-down-circle\" />\n            }\n          />\n        </div>\n      </HStack>\n    </NativeBaseProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}