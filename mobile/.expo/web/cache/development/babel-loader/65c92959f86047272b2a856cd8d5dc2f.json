{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/saeed1234/New Volume1/Projects/iot/task2/Self-driving-car/mobile/context.js\";\n\nimport React, { useState, createContext, useEffect } from 'react';\nvar AppContext = createContext();\n\nvar AppProvider = function AppProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState('Pilot'),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rfid = _useState4[0],\n      setRFID = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      wsConnected = _useState6[0],\n      setWSConnected = _useState6[1];\n\n  var ws = new WebSocket('ws://172.28.129.221:80/slave');\n  useEffect(function () {\n    ws.onopen = function () {\n      console.log('Connected to server');\n      setWSConnected(true);\n    };\n\n    ws.onclose = function (e) {\n      console.log(e.code, e.reason);\n      setWSConnected(false);\n    };\n\n    ws.onerror = function (e) {\n      console.log(e.message);\n      setWSConnected(false);\n    };\n  }, [ws]);\n  return React.createElement(AppContext.Provider, {\n    value: {\n      mode: mode,\n      setMode: setMode,\n      ws: ws,\n      rfid: rfid,\n      setRFID: setRFID,\n      wsConnected: wsConnected\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { AppProvider, AppContext };","map":{"version":3,"sources":["/media/saeed1234/New Volume1/Projects/iot/task2/Self-driving-car/mobile/context.js"],"names":["React","useState","createContext","useEffect","AppContext","AppProvider","children","mode","setMode","rfid","setRFID","wsConnected","setWSConnected","ws","WebSocket","onopen","console","log","onclose","e","code","reason","onerror","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,IAAMC,UAAU,GAAGF,aAAa,EAAhC;;AACA,IAAMG,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACpC,kBAAwBL,QAAQ,CAAC,OAAD,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBP,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAsCT,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAOU,WAAP;AAAA,MAAoBC,cAApB;;AACA,MAAIC,EAAE,GAAG,IAAIC,SAAJ,CAAc,8BAAd,CAAT;AACAX,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,EAAE,CAACE,MAAH,GAAY,YAAM;AAEhBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAL,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAJD;;AAMAC,IAAAA,EAAE,CAACK,OAAH,GAAa,UAACC,CAAD,EAAO;AAClBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACC,IAAd,EAAoBD,CAAC,CAACE,MAAtB;AACAT,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAHD;;AAIAC,IAAAA,EAAE,CAACS,OAAH,GAAa,UAACH,CAAD,EAAO;AAElBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACI,OAAd;AACAX,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAJD;AAKD,GAhBQ,EAgBN,CAACC,EAAD,CAhBM,CAAT;AAiBA,SACE,oBAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AAAEN,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,OAAO,EAAPA,OAAR;AAAiBK,MAAAA,EAAE,EAAFA,EAAjB;AAAqBJ,MAAAA,IAAI,EAAJA,IAArB;AAA2BC,MAAAA,OAAO,EAAPA,OAA3B;AAAoCC,MAAAA,WAAW,EAAXA;AAApC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGL,QAHH,CADF;AAOD,CA7BD;;AA+BA,SAASD,WAAT,EAAsBD,UAAtB","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\n\nconst AppContext = createContext();\nconst AppProvider = ({ children }) => {\n  const [mode, setMode] = useState('Pilot');\n  const [rfid, setRFID] = useState(1);\n  const [wsConnected, setWSConnected] = useState(false);\n  var ws = new WebSocket('ws://172.28.129.221:80/slave');\n  useEffect(() => {\n    ws.onopen = () => {\n      // connection opened\n      console.log('Connected to server');\n      setWSConnected(true);\n    };\n\n    ws.onclose = (e) => {\n      console.log(e.code, e.reason);\n      setWSConnected(false);\n    };\n    ws.onerror = (e) => {\n      // an error occurred\n      console.log(e.message);\n      setWSConnected(false);\n    };\n  }, [ws]);\n  return (\n    <AppContext.Provider\n      value={{ mode, setMode, ws, rfid, setRFID, wsConnected }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppProvider, AppContext };\n"]},"metadata":{},"sourceType":"module"}