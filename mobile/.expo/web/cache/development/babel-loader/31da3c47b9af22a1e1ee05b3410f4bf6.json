{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/media/saeed1234/New Volume1/Projects/iot/task2/Self-driving-car/mobile/components/ControllPanel.js\";\n\nimport React, { useContext } from 'react';\nimport { HStack, Center, IconButton, Text } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AppContext } from \"../context\";\n\nvar ControllPanel = function ControllPanel() {\n  var _useContext = useContext(AppContext),\n      mode = _useContext.mode,\n      setMode = _useContext.setMode,\n      ws = _useContext.ws,\n      wsConnected = _useContext.wsConnected;\n\n  return React.createElement(React.Fragment, null, React.createElement(Center, {\n    width: \"40%\",\n    borderLeftWidth: 2,\n    borderColor: \"muted.300\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \" \"), React.createElement(IconButton, {\n    isDisabled: mode === 'auto-pilot' || !wsConnected,\n    onPressIn: function onPressIn() {\n      ws.send('F');\n      console.log('forwared order sent');\n    },\n    onPressOut: function onPressOut() {\n      ws.send('S');\n      console.log('stop oredr sent');\n    },\n    icon: React.createElement(Ionicons, {\n      color: \"green\",\n      size: 60,\n      name: \"chevron-up-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), React.createElement(HStack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(IconButton, {\n    isDisabled: mode === 'auto-pilot' || !wsConnected,\n    onPressIn: function onPressIn() {\n      return ws.send('L');\n    },\n    onPressOut: function onPressOut() {\n      return ws.send('S');\n    },\n    mx: 4,\n    icon: React.createElement(Ionicons, {\n      color: \"green\",\n      size: 60,\n      name: \"chevron-back-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), React.createElement(IconButton, {\n    isDisabled: mode === 'auto-pilot' || !wsConnected,\n    onPressIn: function onPressIn() {\n      return ws.send('R');\n    },\n    onPressOut: function onPressOut() {\n      return ws.send('S');\n    },\n    mx: 4,\n    icon: React.createElement(Ionicons, {\n      color: \"green\",\n      size: 60,\n      name: \"chevron-forward-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })), React.createElement(IconButton, {\n    isDisabled: mode === 'auto-pilot' || !wsConnected,\n    onPressIn: function onPressIn() {\n      return ws.send('B');\n    },\n    onPressOut: function onPressOut() {\n      return ws.send('S');\n    },\n    icon: React.createElement(Ionicons, {\n      color: \"green\",\n      size: 60,\n      name: \"chevron-down-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ControllPanel;","map":{"version":3,"sources":["/media/saeed1234/New Volume1/Projects/iot/task2/Self-driving-car/mobile/components/ControllPanel.js"],"names":["React","useContext","HStack","Center","IconButton","Text","Ionicons","AppContext","ControllPanel","mode","setMode","ws","wsConnected","send","console","log"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { HStack, Center, IconButton, Text } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AppContext } from '../context';\n\nconst ControllPanel = () => {\n  const { mode, setMode, ws, wsConnected } = useContext(AppContext);\n  return (\n    <>\n      <Center width=\"40%\" borderLeftWidth={2} borderColor=\"muted.300\">\n        <Text> </Text>\n        <IconButton\n          isDisabled={mode === 'auto-pilot' || !wsConnected}\n          onPressIn={() => {\n            ws.send('F');\n            console.log('forwared order sent');\n          }}\n          onPressOut={() => {\n            ws.send('S');\n            console.log('stop oredr sent');\n          }}\n          icon={<Ionicons color=\"green\" size={60} name=\"chevron-up-circle\" />}\n        />\n        <HStack>\n          <IconButton\n            isDisabled={mode === 'auto-pilot' || !wsConnected}\n            onPressIn={() => ws.send('L')}\n            onPressOut={() => ws.send('S')}\n            mx={4}\n            icon={\n              <Ionicons color=\"green\" size={60} name=\"chevron-back-circle\" />\n            }\n          />\n          <IconButton\n            isDisabled={mode === 'auto-pilot' || !wsConnected}\n            onPressIn={() => ws.send('R')}\n            onPressOut={() => ws.send('S')}\n            mx={4}\n            icon={\n              <Ionicons color=\"green\" size={60} name=\"chevron-forward-circle\" />\n            }\n          />\n        </HStack>\n        <IconButton\n          isDisabled={mode === 'auto-pilot' || !wsConnected}\n          onPressIn={() => ws.send('B')}\n          onPressOut={() => ws.send('S')}\n          icon={<Ionicons color=\"green\" size={60} name=\"chevron-down-circle\" />}\n        />\n      </Center>\n    </>\n  );\n};\nexport default ControllPanel;\n"]},"metadata":{},"sourceType":"module"}