{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/media/saeed1234/New Volume1/Projects/iot/task2/Self-driving-car/mobile/components/CarMode.js\";\n\nimport React, { useContext } from 'react';\nimport { HStack, Center, VStack, Button, Card, Text } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AppContext } from \"../context\";\n\nvar CarMode = function CarMode() {\n  var _useContext = useContext(AppContext),\n      setMode = _useContext.setMode,\n      ws = _useContext.ws,\n      rfid = _useContext.rfid,\n      wsConnected = _useContext.wsConnected,\n      mode = _useContext.mode;\n\n  var handelPress = function handelPress(mode) {\n    setMode(mode);\n    ws.send(mode);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(VStack, {\n    width: \"60%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, React.createElement(Center, {\n    mt: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, !wsConnected ? 'connection failed' : mode + \" Mode Running now\", ' ', React.createElement(HStack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    colorScheme: \"darkBlue\",\n    mx: 4,\n    rightIcon: React.createElement(Ionicons, {\n      color: \"white\",\n      size: 20,\n      name: \"speedometer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }),\n    onPress: function onPress() {\n      return handelPress('pilot');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, \"Pilot\")), React.createElement(Button, {\n    mx: 4,\n    rightIcon: React.createElement(Ionicons, {\n      color: \"white\",\n      size: 20,\n      name: \"airplane\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 26\n      }\n    }),\n    onPress: function onPress() {\n      return handelPress('auto-pilot');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Auto-Pilot\")))));\n};\n\nexport default CarMode;","map":{"version":3,"sources":["/media/saeed1234/New Volume1/Projects/iot/task2/Self-driving-car/mobile/components/CarMode.js"],"names":["React","useContext","HStack","Center","VStack","Button","Card","Text","Ionicons","AppContext","CarMode","setMode","ws","rfid","wsConnected","mode","handelPress","send"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyCC,IAAzC,EAA+CC,IAA/C,QAA2D,aAA3D;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,UAAT;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,oBAAiDT,UAAU,CAACQ,UAAD,CAA3D;AAAA,MAAQE,OAAR,eAAQA,OAAR;AAAA,MAAiBC,EAAjB,eAAiBA,EAAjB;AAAA,MAAqBC,IAArB,eAAqBA,IAArB;AAAA,MAA2BC,WAA3B,eAA2BA,WAA3B;AAAA,MAAwCC,IAAxC,eAAwCA,IAAxC;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACD,IAAD,EAAU;AAC5BJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AACAH,IAAAA,EAAE,CAACK,IAAH,CAAQF,IAAR;AACD,GAHD;;AAIA,SACE,0CACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACD,WAAD,GAAe,mBAAf,GAAwCC,IAAxC,sBADH,EACoE,GADpE,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,SAAS,EACP,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,IAAI,EAAE,EAA9B;AAAkC,MAAA,IAAI,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAME,IAAA,OAAO,EAAE;AAAA,aAAMC,WAAW,CAAC,OAAD,CAAjB;AAAA,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CADF,EAWE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,SAAS,EAAE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,IAAI,EAAE,EAA9B;AAAkC,MAAA,IAAI,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFb;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMA,WAAW,CAAC,YAAD,CAAjB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,CAFF,CADF,CADF,CADF;AAyCD,CA/CD;;AAgDA,eAAeN,OAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { HStack, Center, VStack, Button, Card, Text } from 'native-base';\nimport { Ionicons } from '@expo/vector-icons';\nimport { AppContext } from '../context';\n\nconst CarMode = () => {\n  const { setMode, ws, rfid, wsConnected, mode } = useContext(AppContext);\n  const handelPress = (mode) => {\n    setMode(mode);\n    ws.send(mode);\n  };\n  return (\n    <>\n      <VStack width=\"60%\">\n        <Center mt={20}>\n          {!wsConnected ? 'connection failed' : `${mode} Mode Running now`}{' '}\n          <HStack>\n            <Button\n              colorScheme=\"darkBlue\"\n              mx={4}\n              rightIcon={\n                <Ionicons color=\"white\" size={20} name=\"speedometer\" />\n              }\n              onPress={() => handelPress('pilot')}\n            >\n              <Text color=\"white\">Pilot</Text>\n            </Button>\n            <Button\n              mx={4}\n              rightIcon={<Ionicons color=\"white\" size={20} name=\"airplane\" />}\n              onPress={() => handelPress('auto-pilot')}\n            >\n              Auto-Pilot\n            </Button>\n          </HStack>\n          {/* <Button\n            marginY={5}\n            colorScheme=\"yellow\"\n            rightIcon={<Ionicons color=\"black\" size={20} name=\"bluetooth\" />}\n          >\n            <Text>Find RFID</Text>\n          </Button>\n          <Card mt={20} width={250}>\n            <Text\n              fontWeight=\"bold\"\n              textAlign=\"center\"\n            >{`RFID ID is: ${rfid}`}</Text>\n          </Card> */}\n        </Center>\n      </VStack>\n    </>\n  );\n};\nexport default CarMode;\n"]},"metadata":{},"sourceType":"module"}